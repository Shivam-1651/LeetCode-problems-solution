/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
vector<vector<int>> v;
vector<int> ans;
void level( TreeNode* root)
{
    if( root == nullptr)
    return ;
     queue<TreeNode*> q;
    q.push(root);
    q.push(nullptr);

    while( !q.empty())
    {
        TreeNode* tmp= q.front();
        q.pop();
        if( tmp == nullptr)
        {
            v.push_back(ans);
            ans.clear();
            if( !q.empty())
            {
                q.push(nullptr);
            }
        }
        else{
            ans.push_back(tmp->val);
            if( tmp->left)
            {
                q.push(tmp->left);
                
            }
            if( tmp->right)
            {
                q.push(tmp->right);

            }

        }
    }

}
    vector<vector<int>> levelOrderBottom(TreeNode* root) {
        level( root);
        reverse(v.begin(),v.end());
        return v;
    }
};

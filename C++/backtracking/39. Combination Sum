class Solution {
public:
void solve(vector<vector<int>> &ans,vector<int>& can,vector<int> op, int i,int n,int t)
{
if( i == n)
{
    if( t == 0 )
    {
        ans.push_back(op);
    }
        return;
}
    if(t >= can[i] )
    {
        op.push_back(can[i]);
    solve( ans,can,op,i,n,t-can[i]);
    op.pop_back();

    }

    solve( ans,can,op,i+1,n,t);
 }

    vector<vector<int>> combinationSum(vector<int>& candidates, int target) {
        vector<vector<int>> ans;
        vector<int> op;
        int n = candidates.size(); 
        solve(ans , candidates,op,0,n,target);
        return ans;
    }
};

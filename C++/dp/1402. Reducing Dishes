class Solution {
public:
int dp[501][501];
int solve(vector<int>& satisfaction,int i,int time ,int n)
{
    if( i>= n)
    return 0;
    if( dp[i][time]!=-1)
    return dp[i][time];

    int take = time*satisfaction[i] + solve(satisfaction,i+1,time+1,n);
    int nottake =solve(satisfaction,i+1,time,n);
    return dp[i][time]=max( take,nottake);
    }
    int maxSatisfaction(vector<int>& satisfaction) {
        int n=satisfaction.size();
        memset(dp,-1,sizeof(dp));
        sort(satisfaction.begin(),satisfaction.end());

        return solve(satisfaction,0,1,n);

    }
};

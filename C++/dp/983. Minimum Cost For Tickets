class Solution {
public:
int dp[366];

int solve(vector<int>& days, vector<int>& cost,int  n,int i)
{
    if( i >=n)
    return 0;
if( dp[i] != -1)
return dp[i];
 int a= cost[0] + solve( days,cost,n,i+1);
int j;
for(  j=i;j<n and days[j]<days[i]+7;j++);
 int b= cost[1] + solve( days,cost,n,j);
for( j=i;j<n and days[j]<days[i]+30;j++);
 int c= cost[2] + solve( days,cost,n,j);

return dp[i]=min(c,min(a,b));

}
    int mincostTickets(vector<int>& days, vector<int>& cost) {
        int n=days.size();
        memset(dp,-1,sizeof(dp));
        return solve( days,cost,n,0);
    }
};

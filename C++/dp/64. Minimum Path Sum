class Solution {
public: 
int ans =0;
int dp[201][201];
 int solve( vector<vector<int>>& grid , int i, int j,int m,int n)
 {
        if( i == m-1 && j == n-1)
        return grid[i][j];
        if( i>=m || j>=n)
        return 1e8;
        if( dp[i][j]!=-1)
        return dp[i][j];

        int d =solve(grid,i+1,j,m,n);
        int r = solve( grid ,i,j+1,m,n);
        dp[i][j] =grid[i][j]+min(d,r);
return dp[i][j];


}

    int minPathSum(vector<vector<int>>& grid) {
        int m= grid.size();
        int n=grid[0].size();
        memset( dp,-1,sizeof(dp));
        int i=m;
        int j=n;
        int k= solve(grid,0,0,m,n);
        return k;
    }
};
